{"version":3,"file":"static/js/509.2164b273.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js","webpack://react-homework-template/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"MovieDetails_backButton__ilGfB\",\"reviews\":\"MovieDetails_reviews__tdSgP\",\"cast\":\"MovieDetails_cast__DSRRH\"};","import { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nimport Notiflix from 'notiflix';\n\nimport Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\n\nimport { fetchMoviesDetails } from 'services/movies-api';\n\nimport s from './MovieDetails.module.css';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  let activeClassName = {\n    color: 'tomato',\n  };\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    setLoading(true);\n    fetchMoviesDetails(movieId)\n      .then(res => {\n        setMovie(res);\n      })\n      .catch(error => {\n        setError('Ooops. Something went wrong...');\n        Notiflix.Notify.failure(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      <Container>\n        <button onClick={handleClick} className={s.backButton}>\n          GO BACK\n        </button>\n\n        {movie && <PageHeading text={movie.title} />}\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        {movie && (\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <h3>\n              {movie.title} ({getYear()})\n            </h3>\n            <p>User score: {Math.round((movie.vote_average / 10) * 100)}%</p>\n            <div className=\"movie_overview\">\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </div>\n            <h3>Genres</h3>\n            <p>\n              {movie.genres\n                ? movie.genres.map(genre => genre.name).join(', ')\n                : '-'}\n            </p>\n          </div>\n        )}\n        <hr />\n        <div>\n          <h2>Additional Information</h2>\n          <NavLink\n            to={`/movies/${movieId}/reviews`}\n            style={({ isActive }) => (isActive ? activeClassName : undefined)}\n            state={location.state}\n          >\n            <p className={s.reviews}>Reviews</p>\n          </NavLink>\n\n          <NavLink\n            to={`/movies/${movieId}/cast`}\n            style={({ isActive }) => (isActive ? activeClassName : undefined)}\n            state={location.state}\n          >\n            <p className={s.cast}>Cast</p>\n          </NavLink>\n          <hr />\n          <Outlet />\n        </div>\n      </Container>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","import axios from 'axios';\n\nconst API_KEY = '2a8b839138ac7f0e01e4e118027c67da';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["MovieDetailsPage","useState","movie","setMovie","error","setError","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","activeClassName","color","useEffect","fetchMoviesDetails","then","res","catch","Notiflix","finally","Container","onClick","state","from","className","s","text","title","src","poster_path","alt","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","to","style","isActive","undefined","PageHeading","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","id","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}