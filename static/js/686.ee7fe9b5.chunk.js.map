{"version":3,"file":"static/js/686.ee7fe9b5.chunk.js","mappings":"kLACA,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAsF,wB,SC6CtF,EAxCkB,SAAH,GAAkC,IAA5BA,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAC3B,OACE,+BACE,eAAIC,UAAWC,EAAO,SACnBH,GACCA,EAAOI,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAW,OACxC,eAAaN,UAAWC,EAAO,UAC7B,UAAC,KAAI,CAACM,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMV,GAAe,UACtDO,GACC,gBACEN,UAAWC,EACXS,IAAG,yCAAoCJ,GACvCK,IAAKN,KAGP,gBACEL,UAAWC,EACXS,IACE,6FAEFC,IAAKP,KAGT,uBAAIA,GAAcC,QAjBbF,EAmBJ,OAKjB,C,sDCnCA,MAAwB,2B,SCCT,SAASS,EAAY,GAAW,IAATC,EAAI,EAAJA,KACpC,OAAO,eAAIb,UAAWC,EAAQ,SAAEY,GAClC,C,+LCFMC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,kGAAe,OAARC,EAAI,+BAAG,EAAC,SACpBH,EAAAA,EAAAA,IAAU,GAAD,OACtBC,EAAmB,oBAAYF,EAAO,iBAASI,EAAI,wCACtD,KAAD,EAFQ,OAAHC,EAAG,yBAGFA,EAAIC,KAAKC,SAAO,2CACxB,kBALqB,mCAOTC,EAAY,mCAAG,WAAOC,GAAK,qFAAU,OAARL,EAAI,+BAAG,EAAC,SAC9BH,EAAAA,EAAAA,IAAU,GAAD,OACtBC,EAAsB,oBAAYF,EAAO,iBAASI,EAAI,kBAAUK,EAAK,wCACxE,KAAD,EAFQ,OAAHJ,EAAG,yBAIFA,EAAIC,KAAKC,SAAO,2CACxB,gBANwB,sCAQZG,EAAkB,mCAAG,WAAMrB,GAAE,uFACtBY,EAAAA,EAAAA,IAAU,GAAD,OACtBC,EAAuB,YAAIb,EAAE,oBAAYW,EAAO,oBACnD,KAAD,EAFQ,OAAHK,EAAG,yBAIFA,EAAIC,MAAI,2CAChB,gBAN8B,sCAQlBK,EAAkB,mCAAG,WAAMtB,GAAE,uFACtBY,EAAAA,EAAAA,IAAU,UAAD,OACfZ,GAAE,OAAGa,EAAuB,oBAAYF,EAAO,oBACzD,KAAD,EAFQ,OAAHK,EAAG,yBAIFA,EAAIC,KAAKM,MAAI,2CACrB,gBAN8B,sCAQlBC,EAAkB,mCAAG,WAAOxB,GAAE,qFAAU,OAARe,EAAI,+BAAG,EAAC,SACjCH,EAAAA,EAAAA,IAAU,UAAD,OACfZ,GAAE,OAAGa,EAAuB,oBAAYF,EAAO,gCAAwBI,IACjF,KAAD,EAFQ,OAAHC,EAAG,yBAIFA,EAAIC,KAAKC,SAAO,2CACxB,gBAN8B,qC,uJC3C/B,EAA6B,8BAA7B,EAAyE,+BAAzE,EAAuH,gC,SC+CvH,EAxCkB,SAAH,GAAsB,IAAhBO,EAAQ,EAARA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAAG,eAA3CC,EAAW,KAAEC,EAAc,KAclC,OACE,+BACE,kBAAMC,SAXW,SAAAC,GACnBA,EAAEC,iBACyB,KAAvBJ,EAAYK,QACdC,IAAAA,OAAAA,QAAwB,wBAE1BR,EAASE,GACTC,EAAe,GACjB,EAIkC/B,UAAWC,EAAa,WACpD,kBACEoC,KAAK,OACLjC,KAAK,cACLkC,MAAOR,EACPS,aAAa,MACbC,WAAS,EACTC,YAAY,aACZC,SAvBkB,SAAAT,GACxBF,EAAeE,EAAEU,OAAOL,MAAMM,cAChC,EAsBQ5C,UAAWC,KAEb,mBAAQoC,KAAK,SAASrC,UAAWC,EAAe,SAAC,eAMzD,E,SCmBA,EAjDmB,WACjB,OAAwC4C,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KACpC,GAA4BlB,EAAAA,EAAAA,UAAS,IAAG,eAAjC/B,EAAM,KAAEkD,EAAS,KACxB,GAA0BnB,EAAAA,EAAAA,UAAS,IAAG,eAA/BoB,EAAK,KAAEC,EAAQ,KACtB,GAA8BrB,EAAAA,EAAAA,WAAS,GAAM,eAAtCsB,EAAO,KAAEC,EAAU,KAEpBC,GAAWC,EAAAA,EAAAA,MACXC,EAAgBT,EAAaU,IAAI,SA6BvC,OA3BAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAKEH,GAAW,IACX9B,EAAAA,EAAAA,IAAaiC,GACVG,MAAK,SAAArC,GACCA,EAAQsC,QACXvB,IAAAA,OAAAA,KAAqB,oBAEvBY,EAAU3B,EACZ,IACCuC,OAAM,SAAAX,GACLC,EAAS,kCACTd,IAAAA,OAAAA,QAAwBa,EAC1B,IACCY,QAAQT,GAAW,GAfxB,CAkBF,GAAG,CAACG,KAOF,+BACE,UAACO,EAAA,EAAS,YACR,SAAC,IAAW,CAACjD,KAAM,iBAClBsC,GAAW,cACXF,IAAS,yBAAMA,KAChB,SAAC,EAAS,CAACrB,SAVjB,SAAkBU,GAChBS,EAAgB,CAAExB,MAAM,GAAD,OAAKe,IAC9B,IASOxC,IAAU,SAACiE,EAAA,EAAS,CAACjE,OAAQA,EAAQC,aAAcsD,QAI5D,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MovieList.jsx","webpack://react-homework-template/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","services/movies-api.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","views/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"img\":\"MoviesList_img__v4jFC\"};","import { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport s from './MoviesList.module.css';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        {movies &&\n          movies.map(({ id, name, title, poster_path }) => (\n            <li key={id} className={s.item}>\n              <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n                {poster_path ? (\n                  <img\n                    className={s.img}\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={title}\n                  />\n                ) : (\n                  <img\n                    className={s.img}\n                    src={\n                      'https://icon-library.com/images/no-picture-available-icon/no-picture-available-icon-11.jpg'\n                    }\n                    alt={name}\n                  />\n                )}\n                <p>{name ? name : title}</p>\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","import axios from 'axios';\n\nconst API_KEY = '2a8b839138ac7f0e01e4e118027c67da';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchInput\":\"SearchBar_searchInput__S8ff+\",\"searchButton\":\"SearchBar_searchButton__hgPYE\"};","import { useState } from 'react';\n\nimport Notiflix from 'notiflix';\n\nimport PropTypes from 'prop-types';\n\nimport s from './SearchBar.module.css';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      Notiflix.Notify.warning('Enter the film title');\n    }\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n          className={s.searchInput}\n        />\n        <button type=\"submit\" className={s.searchButton}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport Notiflix from 'notiflix';\n\nimport Container from 'components/Container/Container';\nimport MovieList from 'components/MoviesList/MovieList';\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nimport { fetchByQuery } from 'services/movies-api';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            Notiflix.Notify.info('No movies found!');\n          }\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          Notiflix.Notify.failure(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Movie Search'} />\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} prevLocation={location} />}\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["movies","prevLocation","className","s","map","id","name","title","poster_path","to","state","from","src","alt","PageHeading","text","API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","Notiflix","type","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","then","length","catch","finally","Container","MovieList"],"sourceRoot":""}