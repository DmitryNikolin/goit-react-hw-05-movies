{"version":3,"file":"static/js/785.6400da25.chunk.js","mappings":"yNAiDA,UA5CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAC1B,GAA0BF,EAAAA,EAAAA,UAAS,MAAK,eAAjCG,EAAK,KAAEC,EAAQ,KACtB,GAA8BJ,EAAAA,EAAAA,WAAS,GAAM,eAAtCK,EAAO,KAAEC,EAAU,KAiB1B,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oFAEA,OAFA,SAEjBF,GAAW,GAAM,UACCG,EAAAA,EAAAA,IAAmBX,GAAS,KAAD,EAAvCY,EAAG,OACTR,EAAWQ,GAAK,gDAEhBN,EAAS,iCAAiC,QAExB,OAFwB,UAE1CE,GAAW,GAAO,4EAErB,kBAViB,mCAWlBE,GACF,GAAG,CAACV,KAGF,gCACGO,GAAW,aACXF,IAAS,yBAAMA,IACfF,GAAWA,EAAQU,QAClB,wBACGV,EAAQW,KAAI,SAAAC,GACX,OACE,2BACE,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKpB,OAGF,wBAAI,gDAIZ,C,+LC7CMC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,kGAAe,OAARC,EAAI,+BAAG,EAAC,SACpBH,EAAAA,EAAAA,IAAU,GAAD,OACtBC,EAAmB,oBAAYF,EAAO,iBAASI,EAAI,wCACtD,KAAD,EAFQ,OAAHX,EAAG,yBAGFA,EAAIY,KAAKC,SAAO,2CACxB,kBALqB,mCAOTC,EAAY,mCAAG,WAAOC,GAAK,qFAAU,OAARJ,EAAI,+BAAG,EAAC,SAC9BH,EAAAA,EAAAA,IAAU,GAAD,OACtBC,EAAsB,oBAAYF,EAAO,iBAASI,EAAI,kBAAUI,EAAK,wCACxE,KAAD,EAFQ,OAAHf,EAAG,yBAIFA,EAAIY,KAAKC,SAAO,2CACxB,gBANwB,sCAQZG,EAAkB,mCAAG,WAAMV,GAAE,uFACtBE,EAAAA,EAAAA,IAAU,GAAD,OACtBC,EAAuB,YAAIH,EAAE,oBAAYC,EAAO,oBACnD,KAAD,EAFQ,OAAHP,EAAG,yBAIFA,EAAIY,MAAI,2CAChB,gBAN8B,sCAQlBK,EAAkB,mCAAG,WAAMX,GAAE,uFACtBE,EAAAA,EAAAA,IAAU,UAAD,OACfF,GAAE,OAAGG,EAAuB,oBAAYF,EAAO,oBACzD,KAAD,EAFQ,OAAHP,EAAG,yBAIFA,EAAIY,KAAKM,MAAI,2CACrB,gBAN8B,sCAQlBnB,EAAkB,mCAAG,WAAOO,GAAE,qFAAU,OAARK,EAAI,+BAAG,EAAC,SACjCH,EAAAA,EAAAA,IAAU,UAAD,OACfF,GAAE,OAAGG,EAAuB,oBAAYF,EAAO,gCAAwBI,IACjF,KAAD,EAFQ,OAAHX,EAAG,yBAIFA,EAAIY,KAAKC,SAAO,2CACxB,gBAN8B,qC","sources":["components/Reviews/Reviews.js","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMoviesReviews } from 'services/movies-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        const res = await fetchMoviesReviews(movieId);\n        setReviews(res);\n      } catch (error) {\n        setError('Movie reviews search error...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && 'Loading...'}\n      {error && <div>{error}</div>}\n      {reviews && reviews.length ? (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h3>We don't have any reviews for this movie.</h3>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '2a8b839138ac7f0e01e4e118027c67da';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","loading","setLoading","useEffect","fetchReviews","fetchMoviesReviews","res","length","map","review","author","content","id","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}